/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iterface;

import java.awt.event.ItemEvent;

/**
 *
 * @author Hieu
 */
public class frameMain extends javax.swing.JFrame {

    /**
     * Creates new form frameMain
     */
    public frameMain() {
        initComponents();
        initOtherComponents();
    }

    public void initOtherComponents() {
        coordinatePanel = new frameCoordinateSystemPanel(1000,1000);
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(coordinatePanel);
        coordinatePanel.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(coordinatePanel);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        NetworkSizeMenuItem = new javax.swing.JMenuItem();
        SaveMenuItem = new javax.swing.JMenuItem();
        ShowGridMenuItem = new javax.swing.JCheckBoxMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        SensorMenu = new javax.swing.JMenu();
        AddSensorMenuItem = new javax.swing.JMenuItem();
        ModifiySensorMenuItem = new javax.swing.JMenuItem();
        ShowSensorMenuItem = new javax.swing.JCheckBoxMenuItem();
        DeleteAllSenorMenuItem = new javax.swing.JMenuItem();
        TargetMenu = new javax.swing.JMenu();
        AddTargetMenuItem = new javax.swing.JMenuItem();
        ModifyTargetMenuItem = new javax.swing.JMenuItem();
        ShowTargetMenuItem = new javax.swing.JCheckBoxMenuItem();
        DeleteAllTargetMenuItem = new javax.swing.JMenuItem();
        RobotMenu = new javax.swing.JMenu();
        AddRobotMenuItem = new javax.swing.JMenuItem();
        ModifyRobotMenuItem = new javax.swing.JMenuItem();
        ShowRobotMenuItem = new javax.swing.JCheckBoxMenuItem();
        DeleteAllRobotMenuItem = new javax.swing.JMenuItem();
        AlgorithmMenu = new javax.swing.JMenu();
        MyAlgorithmMenuItem = new javax.swing.JMenuItem();
        Algorithm1MenuItem = new javax.swing.JMenuItem();
        Algorithm2MenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fileMenu.setMnemonic('f');
        fileMenu.setText("Setting");

        NetworkSizeMenuItem.setMnemonic('o');
        NetworkSizeMenuItem.setText("Network Size");
        NetworkSizeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NetworkSizeMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(NetworkSizeMenuItem);

        SaveMenuItem.setMnemonic('s');
        SaveMenuItem.setText("Save");
        fileMenu.add(SaveMenuItem);

        ShowGridMenuItem.setSelected(true);
        ShowGridMenuItem.setText("ShowGrid");
        ShowGridMenuItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ShowGridItemStateChangedListener(evt);
            }
        });
        fileMenu.add(ShowGridMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        SensorMenu.setMnemonic('e');
        SensorMenu.setText("Sensor");

        AddSensorMenuItem.setMnemonic('t');
        AddSensorMenuItem.setText("Add");
        SensorMenu.add(AddSensorMenuItem);

        ModifiySensorMenuItem.setMnemonic('y');
        ModifiySensorMenuItem.setText("Modify");
        SensorMenu.add(ModifiySensorMenuItem);

        ShowSensorMenuItem.setSelected(true);
        ShowSensorMenuItem.setText("View");
        ShowSensorMenuItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SensorItemStateChangedListener(evt);
            }
        });
        ShowSensorMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowSensorMenuItemActionPerformed(evt);
            }
        });
        SensorMenu.add(ShowSensorMenuItem);

        DeleteAllSenorMenuItem.setMnemonic('d');
        DeleteAllSenorMenuItem.setText("DeleteAll");
        SensorMenu.add(DeleteAllSenorMenuItem);

        menuBar.add(SensorMenu);

        TargetMenu.setText("Target");

        AddTargetMenuItem.setText("Add");
        TargetMenu.add(AddTargetMenuItem);

        ModifyTargetMenuItem.setText("Modify");
        TargetMenu.add(ModifyTargetMenuItem);

        ShowTargetMenuItem.setSelected(true);
        ShowTargetMenuItem.setText("View");
        ShowTargetMenuItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TargetItemStateChangedListener(evt);
            }
        });
        ShowTargetMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowTargetMenuItemActionPerformed(evt);
            }
        });
        TargetMenu.add(ShowTargetMenuItem);

        DeleteAllTargetMenuItem.setText("DeleteAll");
        TargetMenu.add(DeleteAllTargetMenuItem);

        menuBar.add(TargetMenu);

        RobotMenu.setText("Robot");

        AddRobotMenuItem.setText("Add");
        RobotMenu.add(AddRobotMenuItem);

        ModifyRobotMenuItem.setText("Modify");
        RobotMenu.add(ModifyRobotMenuItem);

        ShowRobotMenuItem.setSelected(true);
        ShowRobotMenuItem.setText("View");
        ShowRobotMenuItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                RobotItemStateChangedListener(evt);
            }
        });
        RobotMenu.add(ShowRobotMenuItem);

        DeleteAllRobotMenuItem.setText("DeleteAll");
        RobotMenu.add(DeleteAllRobotMenuItem);

        menuBar.add(RobotMenu);

        AlgorithmMenu.setText("Algorithm");

        MyAlgorithmMenuItem.setText("MyAlgorithm");
        AlgorithmMenu.add(MyAlgorithmMenuItem);

        Algorithm1MenuItem.setText("Algorithm 1");
        AlgorithmMenu.add(Algorithm1MenuItem);

        Algorithm2MenuItem.setText("Algorithm 2");
        AlgorithmMenu.add(Algorithm2MenuItem);

        menuBar.add(AlgorithmMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1295, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void NetworkSizeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NetworkSizeMenuItemActionPerformed
        // TODO add your handling code here:
        coordinatePanel.setCoordinateSize(50, 50);
    }//GEN-LAST:event_NetworkSizeMenuItemActionPerformed

    private void ShowSensorMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowSensorMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ShowSensorMenuItemActionPerformed

    private void ShowTargetMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowTargetMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ShowTargetMenuItemActionPerformed

    private void SensorItemStateChangedListener(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SensorItemStateChangedListener
        // TODO add your handling code here:
        int state = evt.getStateChange();
        if (state == ItemEvent.SELECTED) {
            coordinatePanel.setShowSensor(true);
        } else {
            coordinatePanel.setShowSensor(false);
        }
    }//GEN-LAST:event_SensorItemStateChangedListener

    private void TargetItemStateChangedListener(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TargetItemStateChangedListener
        // TODO add your handling code here:
        int state = evt.getStateChange();
        if (state == ItemEvent.SELECTED) {
            coordinatePanel.setShowTarget(true);
        } else {
            coordinatePanel.setShowTarget(false);
        }
    }//GEN-LAST:event_TargetItemStateChangedListener

    private void RobotItemStateChangedListener(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_RobotItemStateChangedListener
        // TODO add your handling code here:
        int state = evt.getStateChange();
        if (state == ItemEvent.SELECTED) {
            coordinatePanel.setShowRobot(true);
        } else {
            coordinatePanel.setShowRobot(false);
        }
    }//GEN-LAST:event_RobotItemStateChangedListener

    private void ShowGridItemStateChangedListener(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ShowGridItemStateChangedListener
        // TODO add your handling code here:
        int state = evt.getStateChange();
        if (state == ItemEvent.SELECTED) {
            coordinatePanel.setShowGrid(true);
        } else {
            coordinatePanel.setShowGrid(false);
        }
    }//GEN-LAST:event_ShowGridItemStateChangedListener

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frameMain().setVisible(true);
                coordinatePanel.fillCell(20, 14, 0);
                coordinatePanel.fillCell(20, 30, 0);
                coordinatePanel.fillCell(30, 21, 1);
                coordinatePanel.fillCell(20, 2, 2);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AddRobotMenuItem;
    private javax.swing.JMenuItem AddSensorMenuItem;
    private javax.swing.JMenuItem AddTargetMenuItem;
    private javax.swing.JMenuItem Algorithm1MenuItem;
    private javax.swing.JMenuItem Algorithm2MenuItem;
    private javax.swing.JMenu AlgorithmMenu;
    private javax.swing.JMenuItem DeleteAllRobotMenuItem;
    private javax.swing.JMenuItem DeleteAllSenorMenuItem;
    private javax.swing.JMenuItem DeleteAllTargetMenuItem;
    private javax.swing.JMenuItem ModifiySensorMenuItem;
    private javax.swing.JMenuItem ModifyRobotMenuItem;
    private javax.swing.JMenuItem ModifyTargetMenuItem;
    private javax.swing.JMenuItem MyAlgorithmMenuItem;
    private javax.swing.JMenuItem NetworkSizeMenuItem;
    private javax.swing.JMenu RobotMenu;
    private javax.swing.JMenuItem SaveMenuItem;
    private javax.swing.JMenu SensorMenu;
    private javax.swing.JCheckBoxMenuItem ShowGridMenuItem;
    private javax.swing.JCheckBoxMenuItem ShowRobotMenuItem;
    private javax.swing.JCheckBoxMenuItem ShowSensorMenuItem;
    private javax.swing.JCheckBoxMenuItem ShowTargetMenuItem;
    private javax.swing.JMenu TargetMenu;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem saveAsMenuItem;
    // End of variables declaration//GEN-END:variables
    private static frameCoordinateSystemPanel coordinatePanel;
}
